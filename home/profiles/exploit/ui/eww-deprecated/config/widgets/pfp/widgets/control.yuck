(defwidget profile[]
           (box :orientation "h"
                :space-evenly false
                :class "profile"
                :spacing 20
                (image :hexpand true
                       :halign "start"
                       :image-width 50
                       :path pfp)
                (box :orientation "v"
                     :valign "center"
                     :space-evenly false
                     :halign "end"
                     :spacing 3
                     (box :class "profiletime" 
                          :halign "end"
                          "hansestallo@gmail.com"))))
                      
(defwidget music[]
 (box :orientation "h" :space-evenly false :spacing 15
   ;(overlay :hexpand true)
   (box :orientation 'v' :class "musicbuttons"
          (button :onclick "mpc prev":valign 'center' :class "musicbutton"  "󰒮")
          (button :onclick "mpc toggle" :valign 'center' :class "musicbutton"  ":")
          (button :onclick "mpc next" :valign 'center' :class "musicbutton"  "󰒭"))))
    
  


(defwidget slider[value icon function class]
           (box :orientation "h" :hexpand true :space-evenly false :spacing 20
                (box :class "scaleicon" icon)
                (box :class class  :hexpand true  
                     (scale :class "scale ${class}"
                            :min 0
                            :max 100
                            :orientation "h"
                            :value value
                            :onchange function
                            :active true 
                            :valign 'center'))))
  
    

(defwidget control[]
           (box :orientation "v" :class "control" :space-evenly false :spacing 15
                (profile)
                (box :orientation "v" :class "sliders" :space-evenly false :spacing 25
                    (slider :class "brightscale" :icon "󰃟" :value brightness  :function "brightnessctl s {}%") 
                    (slider :class "volscale" :icon "󰓃" :value volume :round-digits 0 :function "pamixer --set-volume {}"))
                (music)))
  


(defwindow control
           :monitor 1 
           :geometry (geometry :x "10%"
                      :y "10%"
                      :width "450px"
                      :height "580px"
                      :anchor "top right")
           :stacking "fg"
           :exclusive false
           (control))               
                           
