# SETTINGS 
set shell sh
set hidden true
set drawbox false 
set mouse true
set icons true
set ignorecase true
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set cursorpreviewfmt "\033[7;2m"




# COMMANDS
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        application/pdf) nohup zathura $fx > /dev/null 2> /dev/null &;;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd recol ${{
    w=$(tput cols)
    if [ $w -le 80 ]; then
        lf -remote "send $id :set nopreview; set ratios 1" || exit 0
    else
        lf -remote "send $id set ratios 1:2:3; set preview" || exit 0
    fi
}}

cmd trash %set -f; mv $fx ~/.trash
cmd clear_trash %trash-empty
cmd restore_trash ${{
  trash-restore
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}



# Basic Functions
map . set hidden!
map md mkdir
map dD delete
map dd cut
map pp paste
map yy copy
map <enter> open
map mf mkfile
map tt tag-toggle
map mF sudomkfile
map ms $mkscript
map ch chmod
#map br $vimv $fx
map rr rename
map gg top
map gG bottom
map rR reload
map cc clear
map uu unselect

# use enter for shell commands
map <enter> shell

# show the result of execdution of previous commands
map ` !true

# execute current file (must be executable)
map xx $$f
map xX !$f

# dedicated keys for file opener actions
map ooO &mimeopen $f
map oOO $mimeopen --ask $f

# File Openers
map ee $$EDITOR "$f"
map eg $vscodium "$f"
map uu $view "$f"

# Archive Mappings
map az zip
map at tar
map au extract 

# Trash Mappings
map ddD trash
map tc clear_trash
map tr restore_trash
map ttt ${{nvim}}

# Movement
map gtr cd ~/.trash

map gv cd ~/Videos

map gp cd ~/Pictures
map gps cd ~/Pictures/Screenshots
map gw. cd ~/.wallpapers
map gd. /home/hayato/.dotfiles/
map gf. ~/.fonts
map gfl. ~/.floorp

map gdc cd ~/Documents
map gD cd ~/Downloads
map gcd cd ~ 

map gc cd ~/.config

#unmap
map a
map c
map d
map h
map H
map k
map l
map L
map m
map o
map p
map r
map t
map u
map y

# Makes sure that folders exists
%mkdir -p ~/Downloads
%mkdir -p ~/Documents
%mkdir -p ~/Videos
%mkdir -p ~/Pictures
%mkdir -p ~/Pictures/Screenshots
%mkdir -p ~/.trash
%mkdir -p ~/.wallpapers
%mkdir -p ~/.icons
%mkdir -p ~/.fonts
